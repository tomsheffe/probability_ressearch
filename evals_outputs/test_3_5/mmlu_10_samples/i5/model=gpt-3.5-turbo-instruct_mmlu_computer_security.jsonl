[
  {
    "doc_id": 0,
    "doc": {
      "question": "Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program?",
      "subject": "computer_security",
      "choices": [
        "Generational",
        "Blackbox",
        "Whitebox",
        "Mutation-based"
      ],
      "answer": 2
    },
    "target": "(D)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program?\n(A) Mutation-based (B) Generational (C) Blackbox (D) Whitebox\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        "\nD) Whitebox"
      ]
    ],
    "filtered_resps": [
      "(D)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 1,
    "doc": {
      "question": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don’t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server.",
      "subject": "computer_security",
      "choices": [
        "True, True",
        "False, False",
        "True, False",
        "False, True"
      ],
      "answer": 0
    },
    "target": "(C)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don’t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server.\n(A) False, False (B) False, True (C) True, True (D) True, False\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        "\n(C) True, True"
      ]
    ],
    "filtered_resps": [
      "(C)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 2,
    "doc": {
      "question": "MIT’s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used?",
      "subject": "computer_security",
      "choices": [
        "The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets.",
        "When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket’s maximum lifetime.",
        "When a client connects to a server, the server compares the ticket’s expiration time to the server’s current clock, and refuses to authenticate the user if the ticket expiration time is in the past.",
        "When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC’s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired."
      ],
      "answer": 2
    },
    "target": "(B)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: MIT’s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used?\n(A) When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket’s maximum lifetime. (B) When a client connects to a server, the server compares the ticket’s expiration time to the server’s current clock, and refuses to authenticate the user if the ticket expiration time is in the past. (C) When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC’s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. (D) The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets.\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (B) When a client connects to a server, the server compares the ticket’s expiration time to the server’s current clock, and refuses to authenticate the user if the ticket expiration time is in the past."
      ]
    ],
    "filtered_resps": [
      "(B)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 3,
    "doc": {
      "question": "In Message Condentiality, the transmitted message must make sense to only intended",
      "subject": "computer_security",
      "choices": [
        "Receiver",
        "Sender",
        "Modulor",
        "Translator"
      ],
      "answer": 0
    },
    "target": "(B)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: In Message Condentiality, the transmitted message must make sense to only intended\n(A) Sender (B) Receiver (C) Modulor (D) Translator\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (B) Receiver"
      ]
    ],
    "filtered_resps": [
      "(B)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 4,
    "doc": {
      "question": "Which of the following is a remote Trojan?",
      "subject": "computer_security",
      "choices": [
        "Troya",
        "DaCryptic",
        "BankerA",
        "Game-Troj"
      ],
      "answer": 0
    },
    "target": "(A)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Which of the following is a remote Trojan?\n(A) Troya (B) BankerA (C) Game-Troj (D) DaCryptic\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (D) DaCryptic"
      ]
    ],
    "filtered_resps": [
      "(D)"
    ],
    "exact_match": 0.0
  },
  {
    "doc_id": 5,
    "doc": {
      "question": "______________ is a widespread app’s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system.",
      "subject": "computer_security",
      "choices": [
        "Memory leakage",
        "Buffer-overrun",
        "Less processing power",
        "Inefficient programming"
      ],
      "answer": 1
    },
    "target": "(A)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: ______________ is a widespread app’s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system.\n(A) Buffer-overrun (B) Memory leakage (C) Less processing power (D) Inefficient programming\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (A) Buffer-overrun"
      ]
    ],
    "filtered_resps": [
      "(A)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 6,
    "doc": {
      "question": "Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code.",
      "subject": "computer_security",
      "choices": [
        "all instructions that modify segment state",
        "all loads or stores to addresses that are not 0 mod 32",
        "all indirect loads or stores (via an address in a register or variable)",
        "all indirect jumps (via an address in a register or variable)"
      ],
      "answer": 0
    },
    "target": "(A)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code.\n(A) all instructions that modify segment state (B) all loads or stores to addresses that are not 0 mod 32 (C) all indirect jumps (via an address in a register or variable) (D) all indirect loads or stores (via an address in a register or variable)\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (A) all instructions that modify segment state"
      ]
    ],
    "filtered_resps": [
      "(A)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 7,
    "doc": {
      "question": "____________ is also a part of darknet that is employed for transferring files anonymously.",
      "subject": "computer_security",
      "choices": [
        "Freenet",
        "ARPANET",
        "Stuxnet",
        "Internet"
      ],
      "answer": 0
    },
    "target": "(B)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: ____________ is also a part of darknet that is employed for transferring files anonymously.\n(A) Internet (B) Freenet (C) ARPANET (D) Stuxnet\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (B) Freenet"
      ]
    ],
    "filtered_resps": [
      "(B)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 8,
    "doc": {
      "question": "Why apps developed in languages like C, C++ is prone to Buffer-overflow?",
      "subject": "computer_security",
      "choices": [
        "No string boundary checks in predefined functions",
        "No storage check in the external memory",
        "No processing power check",
        "No database check"
      ],
      "answer": 0
    },
    "target": "(A)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Why apps developed in languages like C, C++ is prone to Buffer-overflow?\n(A) No string boundary checks in predefined functions (B) No processing power check (C) No storage check in the external memory (D) No database check\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        " (A) No string boundary checks in predefined functions"
      ]
    ],
    "filtered_resps": [
      "(A)"
    ],
    "exact_match": 1.0
  },
  {
    "doc_id": 9,
    "doc": {
      "question": "Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not",
      "subject": "computer_security",
      "choices": [
        "Joined",
        "Authenticated",
        "Submitted",
        "Shared"
      ],
      "answer": 1
    },
    "target": "(B)",
    "arguments": [
      [
        "The following are multiple choice questions (with answers) about computer security.\nQ: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not\n(A) Joined (B) Authenticated (C) Shared (D) Submitted\nA: ",
        {
          "until": [
            "\n\n"
          ],
          "do_sample": false,
          "temperature": 0.7
        }
      ]
    ],
    "resps": [
      [
        "B) Authenticated"
      ]
    ],
    "filtered_resps": [
      "(B)"
    ],
    "exact_match": 1.0
  }
]